/*
 * Simple Students API
 * A simple API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Group;
import io.swagger.client.model.InlineResponse200;
import io.swagger.client.model.InlineResponse400;
import io.swagger.client.model.Student;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * 
     *
     * Create a new group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addGroupTest() throws ApiException {
        Group body = null;
        api.addGroup(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteGroupTest() throws ApiException {
        String groupId = null;
        String apiKey = null;
        api.deleteGroup(groupId, apiKey);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteStudentTest() throws ApiException {
        String studentId = null;
        String apiKey = null;
        api.deleteStudent(studentId, apiKey);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns a list of group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void groupGetTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        List<InlineResponse200> response = api.groupGet(limit, offset);

        // TODO: test validations
    }
    /**
     * 
     *
     * Obtain information about an goup from her unique groupId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void groupGroupIdGetTest() throws ApiException {
        String groupId = null;
        InlineResponse200 response = api.groupGroupIdGet(groupId);

        // TODO: test validations
    }
    /**
     * 
     *
     * Returns a list of student
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void groupStudentGetTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        List<Student> response = api.groupStudentGet(limit, offset);

        // TODO: test validations
    }
    /**
     * 
     *
     * Create a new student
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void groupStudentPostTest() throws ApiException {
        Student body = null;
        api.groupStudentPost(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * Obtain information about an student from his unique studentId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void groupStudentStudentIdGetTest() throws ApiException {
        String studentId = null;
        Student response = api.groupStudentStudentIdGet(studentId);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void udateGroupTest() throws ApiException {
        Group body = null;
        api.udateGroup(body);

        // TODO: test validations
    }
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void udateStudentTest() throws ApiException {
        Student body = null;
        api.udateStudent(body);

        // TODO: test validations
    }
}
